{"version":3,"sources":["webpack:///src/views/EditRiskType.vue","webpack:///./src/views/EditRiskType.vue?dbd2","webpack:///./src/views/EditRiskType.vue"],"names":["EditRiskType","data","blockRemoval","enableCustomAttSection","open","fields","valid","name","nameRules","v","length","sides","title","items","id","isChoices","currentRiskType","errors","dialog","computed","currentUser","this","$store","getters","user","watch","methods","getARiskType","_this","state","path","api","$route","params","headers","Content-Type","Authorization","token","axios_default","a","get","then","res","customAttributes","forEach","attribute","push","label","type","inputControl","mandatory","isRequired","choices","confirmChoices","e","index","status","indexOf","validate","$refs","form","payload","fieldNames","field","includes","fieldData","key","split","dispatch","addAttribute","filter","removeField","lineId","splice","created","views_EditRiskType","render","_vm","_h","$createElement","_c","_self","attrs","mt-3","mb-5","staticClass","_v","_s","_e","xs6","offset-xs3","ref","lazy-validation","model","value","callback","$$v","expression","persistent","max-width","_l","error","color","on","click","$event","counter","rules","required","xs12","md7","$set","md4","menu-props","item-text","item-value","change","md1","bottom","left","scopedSlots","_u","fn","_g","green","icon","p3","outline","dark","mt-4","disabled","to","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/6.433a0e13420c57412a41.js","sourcesContent":["<template>\n    <v-container>\n        <v-flex mt-3 mb-5>\n            <div class=\"col-sm-10\">\n                <h2 v-if=\"currentRiskType\">{{currentRiskType.name}} Risk Type</h2>\n            </div>\n        </v-flex>\n\n        <v-card class=\"pa-5\">\n            <v-flex xs6 offset-xs3 mb-5>\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n                        <v-card>\n                            <v-card-title class=\"body-2\">Error</v-card-title>\n                            <v-divider></v-divider>\n                            <v-card-text>\n                                <div v-for=\"(error, index) in errors\" :key=index>\n                                    {{error}}\n                                </div>\n                            </v-card-text>\n                            <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn  color=\"primary darken-1\" @click=\"dialog = false\">Ok</v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                    <v-text-field v-model=\"name\" :counter=\"15\" :rules=\"nameRules\" label=\"Name\" required></v-text-field>\n\n                    <v-flex mt-3>\n                        <v-toolbar>\n                            <v-toolbar-title>Custom Attributes</v-toolbar-title>\n                            <v-spacer></v-spacer>\n                        </v-toolbar>\n                    </v-flex>\n\n                    <v-container>\n                        <v-layout v-for=\"(field, index) in fields\" v-bind:key=\"index\">\n                            <v-flex xs12 md7>\n                            <v-text-field\n                                label=\"Field name\"\n                                v-model=\"field.name\"\n                                :rules=\"[v => !!v || 'A field name is required']\"\n                                value=\"\"\n                                required\n                            ></v-text-field>\n                            </v-flex>\n\n                            <v-flex xs12 md4>\n                                <v-select menu-props=\"right\" v-model=\"field.type\" :items=\"items\" item-text=\"name\" item-value=\"id\" v-on:change=\"confirmChoices($event, field.name)\" :rules=\"[v => !!v || 'Field type is required']\" label=\"Field Type\"\n                                required>\n                                </v-select>\n                                <v-text-field v-if=\"isChoices[field.name]\"\n                                    label=\"e.g. blue,red,black\"\n                                    v-model=\"field.choices\"\n                                    value=\"\"\n                                    required\n                                ></v-text-field>\n                            </v-flex>\n\n                            <v-flex xs12 md1>\n                                <v-menu bottom left>\n                                    <template v-slot:activator=\"{ on }\">\n                                    <v-btn\n                                        green\n                                        icon\n                                        v-on=\"on\"\n                                    >\n                                        <v-icon>more_vert</v-icon>\n                                    </v-btn>\n                                    </template>\n                                    <v-list>\n                                        <v-list-tile>\n                                        <v-checkbox p3\n                                    v-model=\"field.mandatory\"\n                                    label=\"Required? \"\n                                    ></v-checkbox>\n                                        </v-list-tile>\n                                    </v-list>\n                                </v-menu>\n                            </v-flex>\n                            <v-flex xs12 md1>\n                                <v-btn icon>\n                                    <v-icon color=\"red\" @click=\"removeField(index)\">delete</v-icon>\n                                </v-btn>\n                            </v-flex>\n\n                        </v-layout>\n                    </v-container>\n\n                    <v-btn outline color=\"success\" @click=\"addAttribute\">\n                        <v-icon left dark>add</v-icon>Add Attribute\n                    </v-btn>\n                    <v-layout mt-4>\n                        <v-btn :disabled=\"!valid\" color=\"success\" @click=\"validate\">\n                            Save\n                        </v-btn>\n                        <v-btn outline color=\"success\" to=\"/risk-types\">\n                            Cancel\n                        </v-btn>\n                    </v-layout>\n                </v-form>\n            </v-flex>\n        </v-card>\n    </v-container>\n</template>\n\n<script>\n\nimport axios from 'axios'\n\nexport default {\n  data: () => ({\n    blockRemoval: true,\n    enableCustomAttSection: false,\n    open: false,\n    fields: [],\n    valid: true,\n    name: '',\n    nameRules: [\n      v => !!v || 'Name is required',\n      v => (v && v.length <= 15) || 'Name must be less than 15 characters'\n    ],\n    sides: [\n      { title: 'Required Field' }\n    ],\n    items: [\n      {name: 'text', id: 'text'},\n      {name: 'number', id: 'number'},\n      {name: 'radio button', id: 'radio button'},\n      {name: 'text area', id: 'textarea'},\n      {name: 'dropdown', id: 'dropdown'},\n      {name: 'date', id: 'date'}\n    ],\n    isChoices: {},\n    currentRiskType: null,\n    errors: null,\n    dialog: false\n  }),\n  computed: {\n    currentUser () {\n      return this.$store.getters.user\n    }\n  },\n  watch: {\n    fields () {\n      this.blockRemoval = this.fields.length <= 1\n    }\n  },\n  methods: {\n    getARiskType () {\n      let state = this.$store.state\n      let path = `${state.api}` + '/risk-types/' + this.$route.params.id\n      let headers = {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + state.user.token\n      }\n      return axios.get(path, {headers: headers})\n        .then(res => {\n          this.currentRiskType = res.data.data\n\n          let customAttributes = res.data.data.customAttributes\n\n          this.name = res.data.data.name\n\n          let fields = []\n          let isChoices = {}\n\n          customAttributes.forEach(function (attribute) {\n            fields.push({\n              name: attribute.label,\n              type: attribute.inputControl,\n              mandatory: attribute.isRequired,\n              choices: attribute.choices || null\n            })\n\n            isChoices[attribute.label] = attribute.choices || false\n          })\n\n          this.fields = fields\n\n          this.isChoices = isChoices\n        })\n    },\n    confirmChoices (e, index) {\n      let status = false\n      if (['dropdown', 'radio button'].indexOf(e) >= 0) {\n        status = true\n      }\n      this.isChoices[index] = status\n    },\n    validate () {\n      if (this.$refs.form.validate()) {\n        var payload = {\n          id: this.currentRiskType.id,\n          name: this.name,\n          customAttributes: []\n        }\n\n        let customAttributes = []\n        let errors = []\n        let fieldNames = []\n\n        this.fields.forEach(function (field) {\n          if (fieldNames.includes(field.name)) {\n            errors.push(field.name + ' is entered more than once')\n          }\n\n          let fieldData = {\n            key: field.name,\n            label: field.name,\n            inputControl: field.type,\n            isRequired: field.mandatory ? field.mandatory : false\n          }\n          fieldNames.push(field.name)\n\n          if (['dropdown', 'radio button'].indexOf(field.type) >= 0) {\n            if (!field.choices) {\n              fieldData['choices'] = []\n            } else if (typeof field.choices === 'string') {\n              fieldData['choices'] = field.choices ? field.choices.split(',') : []\n            } else {\n              fieldData['choices'] = field.choices\n            }\n          }\n          customAttributes.push(fieldData)\n        })\n\n        payload.customAttributes = customAttributes\n\n        if (errors.length > 0) {\n          this.errors = errors\n          this.dialog = true\n          return\n        }\n        this.$store.dispatch('updateRiskType', payload)\n      }\n    },\n    addAttribute () {\n      let checkEmptyFields = this.fields.filter(field => field.name === null || field.type === null)\n      if (checkEmptyFields.length >= 1 && this.fields.length > 0) return\n\n      this.enableCustomAttSection = true\n\n      this.fields.push({\n        name: null,\n        type: null,\n        mandatory: null,\n        choices: null\n      })\n    },\n    removeField (lineId) {\n      if (!this.blockRemoval) this.fields.splice(lineId, 1)\n    }\n  },\n  created () {\n    this.getARiskType()\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/EditRiskType.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-flex',{attrs:{\"mt-3\":\"\",\"mb-5\":\"\"}},[_c('div',{staticClass:\"col-sm-10\"},[(_vm.currentRiskType)?_c('h2',[_vm._v(_vm._s(_vm.currentRiskType.name)+\" Risk Type\")]):_vm._e()])]),_vm._v(\" \"),_c('v-card',{staticClass:\"pa-5\"},[_c('v-flex',{attrs:{\"xs6\":\"\",\"offset-xs3\":\"\",\"mb-5\":\"\"}},[_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"290\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"body-2\"},[_vm._v(\"Error\")]),_vm._v(\" \"),_c('v-divider'),_vm._v(\" \"),_c('v-card-text',_vm._l((_vm.errors),function(error,index){return _c('div',{key:index},[_vm._v(\"\\n                                \"+_vm._s(error)+\"\\n                            \")])}),0),_vm._v(\" \"),_c('v-card-actions',[_c('v-spacer'),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"primary darken-1\"},on:{\"click\":function($event){_vm.dialog = false}}},[_vm._v(\"Ok\")])],1)],1)],1),_vm._v(\" \"),_c('v-text-field',{attrs:{\"counter\":15,\"rules\":_vm.nameRules,\"label\":\"Name\",\"required\":\"\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_vm._v(\" \"),_c('v-flex',{attrs:{\"mt-3\":\"\"}},[_c('v-toolbar',[_c('v-toolbar-title',[_vm._v(\"Custom Attributes\")]),_vm._v(\" \"),_c('v-spacer')],1)],1),_vm._v(\" \"),_c('v-container',_vm._l((_vm.fields),function(field,index){return _c('v-layout',{key:index},[_c('v-flex',{attrs:{\"xs12\":\"\",\"md7\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Field name\",\"rules\":[function (v) { return !!v || 'A field name is required'; }],\"value\":\"\",\"required\":\"\"},model:{value:(field.name),callback:function ($$v) {_vm.$set(field, \"name\", $$v)},expression:\"field.name\"}})],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-select',{attrs:{\"menu-props\":\"right\",\"items\":_vm.items,\"item-text\":\"name\",\"item-value\":\"id\",\"rules\":[function (v) { return !!v || 'Field type is required'; }],\"label\":\"Field Type\",\"required\":\"\"},on:{\"change\":function($event){return _vm.confirmChoices($event, field.name)}},model:{value:(field.type),callback:function ($$v) {_vm.$set(field, \"type\", $$v)},expression:\"field.type\"}}),_vm._v(\" \"),(_vm.isChoices[field.name])?_c('v-text-field',{attrs:{\"label\":\"e.g. blue,red,black\",\"value\":\"\",\"required\":\"\"},model:{value:(field.choices),callback:function ($$v) {_vm.$set(field, \"choices\", $$v)},expression:\"field.choices\"}}):_vm._e()],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md1\":\"\"}},[_c('v-menu',{attrs:{\"bottom\":\"\",\"left\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"green\":\"\",\"icon\":\"\"}},on),[_c('v-icon',[_vm._v(\"more_vert\")])],1)]}}],null,true)},[_vm._v(\" \"),_c('v-list',[_c('v-list-tile',[_c('v-checkbox',{attrs:{\"p3\":\"\",\"label\":\"Required? \"},model:{value:(field.mandatory),callback:function ($$v) {_vm.$set(field, \"mandatory\", $$v)},expression:\"field.mandatory\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md1\":\"\"}},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',{attrs:{\"color\":\"red\"},on:{\"click\":function($event){return _vm.removeField(index)}}},[_vm._v(\"delete\")])],1)],1)],1)}),1),_vm._v(\" \"),_c('v-btn',{attrs:{\"outline\":\"\",\"color\":\"success\"},on:{\"click\":_vm.addAttribute}},[_c('v-icon',{attrs:{\"left\":\"\",\"dark\":\"\"}},[_vm._v(\"add\")]),_vm._v(\"Add Attribute\\n                \")],1),_vm._v(\" \"),_c('v-layout',{attrs:{\"mt-4\":\"\"}},[_c('v-btn',{attrs:{\"disabled\":!_vm.valid,\"color\":\"success\"},on:{\"click\":_vm.validate}},[_vm._v(\"\\n                        Save\\n                    \")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"outline\":\"\",\"color\":\"success\",\"to\":\"/risk-types\"}},[_vm._v(\"\\n                        Cancel\\n                    \")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-41a72a4b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/EditRiskType.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./EditRiskType.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./EditRiskType.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-41a72a4b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./EditRiskType.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/EditRiskType.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}