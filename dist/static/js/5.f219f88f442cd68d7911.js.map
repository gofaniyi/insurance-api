{"version":3,"sources":["webpack:///src/views/RiskType.vue","webpack:///./src/views/RiskType.vue?eb3a","webpack:///./src/views/RiskType.vue"],"names":["views_RiskType","render","_vm","this","_h","$createElement","_c","_self","attrs","mt-3","mb-5","staticClass","_v","xs6","offset-xs3","ref","lazy-validation","model","value","callback","$$v","valid","expression","counter","rules","nameRules","label","required","name","_e","persistent","max-width","dialog","_l","error","index","key","_s","color","on","click","$event","field","xs12","md7","v","$set","md4","menu-props","items","item-text","item-value","change","confirmChoices","isChoices","md1","bottom","left","scopedSlots","_u","fn","_g","green","icon","p3","removeField","outline","addAttribute","dark","mt-4","disabled","validate","to","staticRenderFns","Component","__webpack_require__","normalizeComponent","data","blockRemoval","enableCustomAttSection","open","fields","length","select","sides","title","id","errors","computed","currentUser","$store","getters","user","watch","methods","e","status","indexOf","$refs","form","payload","customAttributes","fieldNames","forEach","includes","push","fieldData","inputControl","type","isRequired","mandatory","choices","split","dispatch","filter","lineId","splice","mounted","__webpack_exports__"],"mappings":"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","file":"static/js/5.f219f88f442cd68d7911.js","sourcesContent":["<template>\n    <v-container>\n        <v-flex mt-3 mb-5>\n            <div class=\"col-sm-10\">\n                <h2>New Risk Type</h2>\n            </div>\n        </v-flex>\n\n        <v-card class=\"pa-5\">\n            <v-flex xs6 offset-xs3 mb-5>\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                    <v-text-field v-model=\"name\" :counter=\"15\" :rules=\"nameRules\" label=\"Name\" required></v-text-field>\n\n                    <v-flex mt-3 v-if=\"enableCustomAttSection\">\n                        <v-toolbar>\n                            <v-toolbar-title>Custom Attributes</v-toolbar-title>\n                            <v-spacer></v-spacer>\n                        </v-toolbar>\n                    </v-flex>\n\n                    <v-container v-if=\"enableCustomAttSection\">\n\n                        <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n                            <v-card>\n                                <v-card-title class=\"body-2\">Error</v-card-title>\n                                <v-divider></v-divider>\n                                <v-card-text>\n                                    <div v-for=\"(error, index) in errors\" :key=index>\n                                        {{error}}\n                                    </div>\n                                </v-card-text>\n                                <v-card-actions>\n                                <v-spacer></v-spacer>\n                                <v-btn  color=\"primary darken-1\" @click=\"dialog = false\">Ok</v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-dialog>\n                        <v-layout v-for=\"(field, index) in fields\" v-bind:key=\"index\">\n                            <v-flex xs12 md7>\n                            <v-text-field\n                                label=\"Field name\"\n                                v-model=\"field.name\"\n                                :rules=\"[v => !!v || 'A field name is required']\"\n                                value=\"\"\n                                required\n                            ></v-text-field>\n                            </v-flex>\n\n                            <v-flex xs12 md4>\n                                <v-select menu-props=\"right\" v-model=\"field.type\" :items=\"items\" item-text=\"name\" item-value=\"id\" v-on:change=\"confirmChoices($event, index)\" :rules=\"[v => !!v || 'Field type is required']\" label=\"Field Type\"\n                                required>\n                                </v-select>\n                                <v-text-field v-if=\"isChoices[index]\"\n                                    label=\"e.g. blue,red,black\"\n                                    v-model=\"field.choices\"\n                                    value=\"\"\n                                    required\n                                ></v-text-field>\n                            </v-flex>\n\n                            <v-flex xs12 md1>\n                                <v-menu bottom left>\n                                    <template v-slot:activator=\"{ on }\">\n                                    <v-btn\n                                        green\n                                        icon\n                                        v-on=\"on\"\n                                    >\n                                        <v-icon>more_vert</v-icon>\n                                    </v-btn>\n                                    </template>\n                                    <v-list>\n                                        <v-list-tile>\n                                        <v-checkbox p3\n                                    v-model=\"field.mandatory\"\n                                    label=\"Required? \"\n                                    ></v-checkbox>\n                                        </v-list-tile>\n                                    </v-list>\n                                </v-menu>\n                            </v-flex>\n                            <v-flex xs12 md1>\n                                <v-btn icon>\n                                    <v-icon color=\"red\" @click=\"removeField(index)\">delete</v-icon>\n                                </v-btn>\n                            </v-flex>\n\n                        </v-layout>\n                    </v-container>\n\n                    <v-btn outline color=\"success\" @click=\"addAttribute\">\n                        <v-icon left dark>add</v-icon>Add Attribute\n                    </v-btn>\n                    <v-layout mt-4>\n                        <v-btn :disabled=\"!valid\" color=\"success\" @click=\"validate\">\n                            Save\n                        </v-btn>\n                        <v-btn outline color=\"success\" to=\"/risk-types\">\n                            Cancel\n                        </v-btn>\n                    </v-layout>\n                </v-form>\n            </v-flex>\n        </v-card>\n    </v-container>\n</template>\n\n<script>\n\nexport default {\n  data: () => ({\n    blockRemoval: true,\n    enableCustomAttSection: false,\n    open: false,\n    fields: [],\n    valid: true,\n    name: '',\n    nameRules: [\n      v => !!v || 'Name is required',\n      v => (v && v.length <= 15) || 'Name must be less than 15 characters'\n    ],\n    select: null,\n    sides: [\n      { title: 'Required Field' }\n    ],\n    items: [\n      {name: 'text', id: 'text'},\n      {name: 'number', id: 'number'},\n      {name: 'radio button', id: 'radio button'},\n      {name: 'text area', id: 'textarea'},\n      {name: 'dropdown', id: 'dropdown'},\n      {name: 'date', id: 'date'}\n    ],\n    isChoices: [],\n    errors: null,\n    dialog: false\n  }),\n  computed: {\n    currentUser () {\n      return this.$store.getters.user\n    }\n  },\n  watch: {\n    fields () {\n      this.blockRemoval = this.fields.length <= 1\n    }\n  },\n  methods: {\n    confirmChoices (e, index) {\n      let status = false\n      if (['dropdown', 'radio button'].indexOf(e) >= 0) {\n        status = true\n      }\n      this.isChoices[index] = status\n    },\n    validate () {\n      if (this.$refs.form.validate()) {\n        var payload = {\n          name: this.name,\n          customAttributes: []\n        }\n        let customAttributes = []\n        let errors = []\n        let fieldNames = []\n\n        this.fields.forEach(function (field) {\n          if (fieldNames.includes(field.name)) {\n            errors.push(field.name + ' is entered more than once')\n          }\n\n          let fieldData = {\n            key: field.name,\n            label: field.name,\n            inputControl: field.type,\n            isRequired: field.mandatory || false\n          }\n\n          fieldNames.push(field.name)\n          if (['dropdown', 'radio button'].indexOf(field.type) >= 0) {\n            if (!field.choices) {\n              fieldData['choices'] = []\n            } else if (typeof field.choices === 'string') {\n              fieldData['choices'] = field.choices ? field.choices.split(',') : []\n            } else {\n              fieldData['choices'] = field.choices\n            }\n          }\n\n          customAttributes.push(fieldData)\n        })\n\n        if (errors.length > 0) {\n          this.errors = errors\n          this.dialog = true\n          return\n        }\n\n        payload.customAttributes = customAttributes\n        this.$store.dispatch('addRiskType', payload)\n      }\n    },\n    addAttribute () {\n      let checkEmptyFields = this.fields.filter(field => field.name === null || field.type === null)\n      if (checkEmptyFields.length >= 1 && this.fields.length > 0) return\n\n      this.enableCustomAttSection = true\n\n      this.fields.push({\n        name: null,\n        type: null,\n        mandatory: null,\n        choices: null\n      })\n    },\n    removeField (lineId) {\n      if (!this.blockRemoval) this.fields.splice(lineId, 1)\n    }\n  },\n  mounted () {\n    this.addAttribute()\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/RiskType.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-flex',{attrs:{\"mt-3\":\"\",\"mb-5\":\"\"}},[_c('div',{staticClass:\"col-sm-10\"},[_c('h2',[_vm._v(\"New Risk Type\")])])]),_vm._v(\" \"),_c('v-card',{staticClass:\"pa-5\"},[_c('v-flex',{attrs:{\"xs6\":\"\",\"offset-xs3\":\"\",\"mb-5\":\"\"}},[_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{attrs:{\"counter\":15,\"rules\":_vm.nameRules,\"label\":\"Name\",\"required\":\"\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_vm._v(\" \"),(_vm.enableCustomAttSection)?_c('v-flex',{attrs:{\"mt-3\":\"\"}},[_c('v-toolbar',[_c('v-toolbar-title',[_vm._v(\"Custom Attributes\")]),_vm._v(\" \"),_c('v-spacer')],1)],1):_vm._e(),_vm._v(\" \"),(_vm.enableCustomAttSection)?_c('v-container',[_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"290\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"body-2\"},[_vm._v(\"Error\")]),_vm._v(\" \"),_c('v-divider'),_vm._v(\" \"),_c('v-card-text',_vm._l((_vm.errors),function(error,index){return _c('div',{key:index},[_vm._v(\"\\n                                    \"+_vm._s(error)+\"\\n                                \")])}),0),_vm._v(\" \"),_c('v-card-actions',[_c('v-spacer'),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"primary darken-1\"},on:{\"click\":function($event){_vm.dialog = false}}},[_vm._v(\"Ok\")])],1)],1)],1),_vm._v(\" \"),_vm._l((_vm.fields),function(field,index){return _c('v-layout',{key:index},[_c('v-flex',{attrs:{\"xs12\":\"\",\"md7\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Field name\",\"rules\":[function (v) { return !!v || 'A field name is required'; }],\"value\":\"\",\"required\":\"\"},model:{value:(field.name),callback:function ($$v) {_vm.$set(field, \"name\", $$v)},expression:\"field.name\"}})],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-select',{attrs:{\"menu-props\":\"right\",\"items\":_vm.items,\"item-text\":\"name\",\"item-value\":\"id\",\"rules\":[function (v) { return !!v || 'Field type is required'; }],\"label\":\"Field Type\",\"required\":\"\"},on:{\"change\":function($event){return _vm.confirmChoices($event, index)}},model:{value:(field.type),callback:function ($$v) {_vm.$set(field, \"type\", $$v)},expression:\"field.type\"}}),_vm._v(\" \"),(_vm.isChoices[index])?_c('v-text-field',{attrs:{\"label\":\"e.g. blue,red,black\",\"value\":\"\",\"required\":\"\"},model:{value:(field.choices),callback:function ($$v) {_vm.$set(field, \"choices\", $$v)},expression:\"field.choices\"}}):_vm._e()],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md1\":\"\"}},[_c('v-menu',{attrs:{\"bottom\":\"\",\"left\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"green\":\"\",\"icon\":\"\"}},on),[_c('v-icon',[_vm._v(\"more_vert\")])],1)]}}],null,true)},[_vm._v(\" \"),_c('v-list',[_c('v-list-tile',[_c('v-checkbox',{attrs:{\"p3\":\"\",\"label\":\"Required? \"},model:{value:(field.mandatory),callback:function ($$v) {_vm.$set(field, \"mandatory\", $$v)},expression:\"field.mandatory\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"md1\":\"\"}},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',{attrs:{\"color\":\"red\"},on:{\"click\":function($event){return _vm.removeField(index)}}},[_vm._v(\"delete\")])],1)],1)],1)})],2):_vm._e(),_vm._v(\" \"),_c('v-btn',{attrs:{\"outline\":\"\",\"color\":\"success\"},on:{\"click\":_vm.addAttribute}},[_c('v-icon',{attrs:{\"left\":\"\",\"dark\":\"\"}},[_vm._v(\"add\")]),_vm._v(\"Add Attribute\\n                \")],1),_vm._v(\" \"),_c('v-layout',{attrs:{\"mt-4\":\"\"}},[_c('v-btn',{attrs:{\"disabled\":!_vm.valid,\"color\":\"success\"},on:{\"click\":_vm.validate}},[_vm._v(\"\\n                        Save\\n                    \")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"outline\":\"\",\"color\":\"success\",\"to\":\"/risk-types\"}},[_vm._v(\"\\n                        Cancel\\n                    \")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-be73f130\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/RiskType.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RiskType.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RiskType.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-be73f130\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./RiskType.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/RiskType.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}